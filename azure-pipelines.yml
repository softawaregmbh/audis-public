# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: $(Build.DefinitionName)_$(Build.SourceBranchName)_$(date:yyyy).$(date:MM).$(date:dd)$(Rev:.r)

trigger:
- master

pool:
  vmImage: windows-latest

variables:
  buildConfiguration: 'Release'

steps:
- task: UseDotNet@2
  displayName: 'Use .NET 6'
  inputs:
    packageType: sdk
    version: '6.x'

- task: UseDotNet@2
  displayName: 'Use .NET 8'
  inputs:
    packageType: sdk
    version: '8.x'

- script: dotnet build --configuration $(buildConfiguration) src/Audis.Analyzer.Common/Audis.Analyzer.Common.sln
  displayName: Build Audis.Analyzer.Common

- script: dotnet build --configuration $(buildConfiguration) src/Audis.Analyzer.Contract/Audis.Analyzer.Contract.sln
  displayName: Build Audis.Analyzer.Contract

- script: dotnet build --configuration $(buildConfiguration) src/Audis.Endpoints.Contract/Audis.Endpoints.Contract.sln
  displayName: Build Audis.Endpoints.Contract

- script: dotnet build --configuration $(buildConfiguration) src/Audis.KnowledgeEnrichers.Contract/Audis.KnowledgeEnrichers.Contract.sln
  displayName: Build Audis.KnowledgeEnrichers.Contract

- script: dotnet build --configuration $(buildConfiguration) src/Audis.Location/Audis.Location.sln
  displayName: Build Audis.Location

- script: dotnet build --configuration $(buildConfiguration) src/Audis.OpenID/Audis.OpenID.sln
  displayName: Build Audis.OpenID

- script: dotnet test --no-build --configuration $(buildConfiguration) --logger trx src/Audis.OpenID/Audis.OpenID.sln
  displayName: Test Audis.OpenID

- script: dotnet build --configuration $(buildConfiguration) src/Audis.Primitives/Audis.Primitives.sln
  displayName: Build Audis.Primitives

- script: dotnet test --no-build --configuration $(buildConfiguration) --logger trx src/Audis.Primitives/Audis.Primitives.sln
  displayName: Test Audis.Primitives

- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testResultsFormat: VSTest
    testResultsFiles: '**/*.trx'

- task: CopyFiles@2
  displayName: Publish NuGet Packages to Artifacts
  inputs:
    Contents: '**/*.nupkg'
    TargetFolder: $(Build.ArtifactStagingDirectory)
    flattenFolders: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifacts'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'